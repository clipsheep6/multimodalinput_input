# Copyright (c) 2024 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/ohos.gni")
import("//build/test.gni")
import("../../../multimodalinput_mini.gni")

module_output_path = "multimodalinput/mmi_unit_out"

ohos_shared_library("oh_input_manager") {
  branch_protector_ret = "pac_ret"
  sanitize = {
    integer_overflow = true
    ubsan = true
    boundary_sanitize = true
    cfi = true
    cfi_cross_dso = true
    debug = false
  }
  include_dirs = [
    "${mmi_path}/common/anco/comm/include",
    "${mmi_path}/frameworks/native/input/",
    "${mmi_path}/frameworks/native/input/include",
    "${mmi_path}/interfaces/kits/c/input/",
    "${mmi_path}/interfaces/native/innerkits/",
    "${mmi_path}/service/connect_manager/include",
    "${mmi_path}/service/filter/include",
    "${mmi_path}/service/module_loader/include",
    "${mmi_path}/service/nap_process/include",
    "${mmi_path}/util/common/include",
    "${mmi_path}/util/socket/include",
    "${mmi_path}/util/network/include",
  ]

  sources = [
    "./oh_input_interceptor.cpp",
    "./oh_input_manager.cpp",
  ]

  cflags = [ "-Werror" ]

  deps = [
    "${mmi_path}/frameworks/proxy:libmmi-client",
    "${mmi_path}/util:libmmi-util",
  ]

  external_deps = [
    "c_utils:utils",
    "hilog:libhilog",
    "napi:ace_napi",
  ]

  innerapi_tags = [ "ndk" ]

  output_name = "ohinput"
  output_extension = "so"
  subsystem_name = "multimodalinput"
  part_name = "input"

  relative_install_dir = "ndk"
}

ohos_unittest("OHInputManagerTest") {
  module_out_path = module_output_path
  include_dirs = [
    "${mmi_path}/frameworks/native/input/include",
    "${mmi_path}/interfaces/kits/c/input",
    "${mmi_path}/service/connect_manager/include",
    "${mmi_path}/service/filter/include",
    "${mmi_path}/service/module_loader/include",
    "${mmi_path}/service/nap_process/include",
  ]

  sources = [
    "${mmi_path}/frameworks/native/input/oh_input_interceptor.cpp",
    "${mmi_path}/frameworks/native/input/oh_input_manager.cpp",
    "${mmi_path}/frameworks/native/input/test/oh_input_manager_test.cpp",
  ]

  configs = [
    "${mmi_path}:coverage_flags",
    "${mmi_path}/frameworks/proxy:libmmi_test_util",
  ]

  deps = [
    "${mmi_path}/frameworks/proxy:libmmi-client",
    "${mmi_path}/util:libmmi-util",
    "//third_party/googletest:gmock_main",
    "//third_party/googletest:gtest_main",
  ]

  external_deps = [
    "c_utils:utils",
    "hilog:libhilog",
    "ipc:ipc_single",
  ]
}
