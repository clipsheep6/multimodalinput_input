# Copyright (C) 2021 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/ohos.gni")
import("//foundation/multimodalinput/input/multimodalinput_mini.gni")

## Install mmi_uinput.rc to /system/etc/init/mmi_uinput.rc {{{
ohos_prebuilt_etc("mmi_uinput.rc") {
  source = "mmi_uinput.rc"
  relative_install_dir = "init"
  part_name = "multimodalinput_base"
  subsystem_name = "multimodalinput"
}

## Install mmi_uinput.rc to /system/etc/init/mmi_uinput.rc }}}

## Install multimodalinput.rc to /system/etc/init/multimodalinput.rc {{{
ohos_prebuilt_etc("multimodalinput.rc") {
  source = "multimodalinput.cfg"
  relative_install_dir = "init"
  part_name = "multimodalinput_base"
  subsystem_name = "multimodalinput"
}

## Install multimodalinput.rc to /system/etc/init/multimodalinput.rc }}}

HDF_FWKS = "//drivers/framework"
ohos_executable("uinput_inject") {
  install_enable = true

  sources = [
    "uinput/hdf_device_event_dispatch.cpp",
    "uinput/hdf_device_event_manager.cpp",
    "uinput/inject_thread.cpp",
    "uinput/keyboard_inject.cpp",
    "uinput/virtual_device.cpp",
    "uinput/virtual_keyboard.cpp",
    "uinput/virtual_touch_screen.cpp",
  ]

  include_dirs = [
    "$HDF_FWKS/include",
    "common/include",
    "//drivers/peripheral/input/interfaces/include",
    "//drivers/adapter/uhdf2/adapter/osal/include",
    "$HDF_FWKS/include/utils",
    "$HDF_FWKS/include/osal",
    "$HDF_FWKS/core/adapter/syscall/include",
    "$HDF_FWKS/include/core",
    "$HDF_FWKS/ability/sbuf/include",
    "$HDF_FWKS/core/shared/include",
    "$HDF_FWKS/utils/include",
    "//third_party/bounds_checking_function/include",
  ]

  deps = [
    "//drivers/peripheral/input/hal:hdi_input",
    "//utils/native/base:utils",
  ]

  external_deps = [ "hiviewdfx_hilog_native:libhilog" ]

  part_name = "multimodalinput_base"
  subsystem_name = "multimodalinput"
}

ohos_shared_library("mmi_uinject") {
  sources = [
    "uinput/hdf_device_event_dispatch.cpp",
    "uinput/hdf_device_event_manager.cpp",
    "uinput/inject_thread.cpp",
    "uinput/keyboard_inject.cpp",
    "uinput/virtual_device.cpp",
    "uinput/virtual_keyboard.cpp",
    "uinput/virtual_touch_screen.cpp",
  ]

  include_dirs = [
    "uinput",
    "common/include",
    "$HDF_FWKS/include",
    "//drivers/peripheral/input/interfaces/include",
    "//drivers/adapter/uhdf2/adapter/osal/include",
    "$HDF_FWKS/include/utils",
    "$HDF_FWKS/include/osal",
    "$HDF_FWKS/core/adapter/syscall/include",
    "$HDF_FWKS/include/core",
    "$HDF_FWKS/ability/sbuf/include",
    "$HDF_FWKS/core/shared/include",
    "$HDF_FWKS/utils/include",
    "//third_party/bounds_checking_function/include",
  ]

  deps = [
    "//drivers/peripheral/input/hal:hdi_input",
    "//utils/native/base:utils",
  ]

  external_deps = [ "hiviewdfx_hilog_native:libhilog" ]

  part_name = "multimodalinput_base"
  subsystem_name = "multimodalinput"
}

config("multimodalinput_mmi_public_config") {
  include_dirs = [ "common/include/" ]
}

group("multimodalinput_mmi_packages") {
  deps = [
    "examples/hosmmi:hosmmi-client",
    "examples/hosmmi:hosmmi-event-injection",

    #"examples/hosmmi:hosmmi-server",
    "examples/hosmmi:hosmmi-virtual-device-manager",
    "frameworks/napi/input_device:libinputdevice",
    "frameworks/napi/input_event_client:libinputeventclient",
    "frameworks/proxy:libmmi-client",
    "frameworks/util:libmmi-util",
    "service:libmmi-server",
    "tools/event_inject:event-injection",
    "tools/virtual_device_manager:libmmi-virtual-device",
  ]
}

group("unittests") {
  testonly = true
  deps = [
    "frameworks/proxy:ut-mmi-proxy",
    "frameworks/util:ut-mmi-util",
    "service:ut-mmi-service",
    "tools/event_inject:ut-event-injection",
    "tools/virtual_device_manager:ut-virtual-device",
  ]
}
