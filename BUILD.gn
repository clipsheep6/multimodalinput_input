# Copyright (c) 2021-2022 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/ohos.gni")
import("//foundation/multimodalinput/input/multimodalinput_mini.gni")

ohos_prebuilt_etc("mmi_uinput.rc") {
  source = "mmi_uinput.rc"
  relative_install_dir = "init"
  part_name = "input"
  subsystem_name = "multimodalinput"
}

ohos_prebuilt_etc("multimodalinput.rc") {
  source = "multimodalinput.cfg"
  relative_install_dir = "init"
  part_name = "input"
  subsystem_name = "multimodalinput"
}

HDF_FWKS = "//drivers/framework"
ohos_executable("uinput_inject") {
  install_enable = true

  sources = [
    "uinput/hdf_device_event_dispatch.cpp",
    "uinput/hdf_device_event_manager.cpp",
    "uinput/inject_thread.cpp",
    "uinput/keyboard_inject.cpp",
    "uinput/virtual_device.cpp",
    "uinput/virtual_keyboard.cpp",
    "uinput/virtual_touch_screen.cpp",
  ]

  include_dirs = [
    "common/include",
    "//foundation/multimodalinput/input/frameworks/util/common/include",
    "//foundation/multimodalinput/input/interfaces/native/innerkits/common/include",
  ]

  external_deps = [
    "hiviewdfx_hilog_native:libhilog",
    "input_device_driver:hdi_input",
    "utils_base:utils",
  ]

  part_name = "input"
  subsystem_name = "multimodalinput"
}

ohos_shared_library("mmi_uinject") {
  sources = [
    "uinput/hdf_device_event_dispatch.cpp",
    "uinput/hdf_device_event_manager.cpp",
    "uinput/inject_thread.cpp",
    "uinput/keyboard_inject.cpp",
    "uinput/virtual_device.cpp",
    "uinput/virtual_keyboard.cpp",
    "uinput/virtual_touch_screen.cpp",
  ]

  include_dirs = [
    "uinput",
    "common/include",
    "$HDF_FWKS/include",
    "//drivers/peripheral/input/interfaces/include",
    "//drivers/adapter/uhdf2/adapter/osal/include",
    "//foundation/multimodalinput/input/frameworks/util/common/include",
    "//foundation/multimodalinput/input/interfaces/native/innerkits/common/include",
  ]

  external_deps = [
    "hiviewdfx_hilog_native:libhilog",
    "input_device_driver:hdi_input",
    "utils_base:utils",
  ]

  part_name = "input"
  subsystem_name = "multimodalinput"
}

config("multimodalinput_mmi_public_config") {
  include_dirs = [ "common/include/" ]
}

group("multimodalinput_mmi_packages") {
  deps = [
    "frameworks/napi/input_consumer:inputconsumer",
    "frameworks/napi/input_device:inputdevice",
    "frameworks/napi/input_event_client:inputeventclient",
    "frameworks/napi/input_monitor:inputmonitor",
    "frameworks/proxy:libmmi-client",
    "service:libmmi-server",
    "tools/inject_event:input",
  ]
}

group("mmi_debug_tools") {
  deps = [
    "patch/diff_libinput_mmi:libinput-analyze-mmi",
    "patch/diff_libinput_mmi:libinput-debug-mmi",
    "patch/diff_libinput_mmi:libinput-list-mmi",
    "patch/diff_libinput_mmi:libinput-measure-mmi",
    "patch/diff_libinput_mmi:libinput-quirks-mmi",
    "patch/diff_libinput_mmi:libinput-record-mmi",
    "patch/diff_libinput_mmi:libinput-tablet-mmi",
    "tools/event_inject:mmi-event-injection",
    "tools/virtual_device_manager:mmi-virtual-device-manager",
    "//third_party/eudev:udevadm",
  ]
}

group("ut_mmi_debug_tools") {
  testonly = true
  deps = [
    "tools/event_inject:ut-event-injection-out",
    "tools/virtual_device_manager:ut-virtual-device-out",
  ]
}

group("unittests") {
  testonly = true
  deps = [
    "frameworks/proxy:ut-mmi-proxy",
    "frameworks/util:ut-mmi-util",
    "service:ut-mmi-service",
    "tools/inject_event:inject_event",
  ]
}
