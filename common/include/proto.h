/*
 * Copyright (c) 2021 Huawei Device Co., Ltd.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
#ifndef OHOS_PROTO_H
#define OHOS_PROTO_H

#define TABLETPAD_BUTTON_NUMBER_PREFIX 0x100
#define bit(x_) (1UL << (x_))

enum ID_MSG {
    ID_MSG_INVALID = 0,
    ID_MSG_BEGIN = 1001,
    ID_MSG_REGISTER_APP_INFO,
    ID_MSG_REGISTER_MSGHANDLER,
    ID_MSG_UNREGISTER_MSGHANDLER,
    ID_MSG_CHECKREPLYMESSAGE,

    ID_MSG_COMMONEVENTHANDLE_BEGIN = 1100,
    ID_MSG_ON_SHOW_MENU,
    ID_MSG_ON_SEND,
    ID_MSG_ON_COPY,
    ID_MSG_ON_PASTE,
    ID_MSG_ON_CUT,
    ID_MSG_ON_UNDO,
    ID_MSG_ON_REFRESH,
    ID_MSG_ON_START_DRAG,
    ID_MSG_ON_CANCEL,
    ID_MSG_ON_ENTER,
    ID_MSG_ON_PREVIOUS,
    ID_MSG_ON_NEXT,
    ID_MSG_ON_BACK,
    ID_MSG_ON_PRINT,
    ID_MSG_COMMONEVENTHANDLE_END,

    ID_MSG_KEYEVENTHANDLE_BEGIN = 2000,
    ID_MSG_ON_KEY,
    ID_MSG_KEYEVENTHANDLE_END,

    ID_MSG_MEDIAEVENTHANDLE_BEGIN = 3000,
    ID_MSG_ON_PLAY,
    ID_MSG_ON_PAUSE,
    ID_MSG_ON_MEDIA_CONTROL,
    ID_MSG_MEDIAEVENTHANDLE_END,

    ID_MSG_SYSTEMEVENTHANDLE_BEGIN = 4000,
    ID_MSG_ON_SCREEN_SHOT,
    ID_MSG_ON_SCREEN_SPLIT,
    ID_MSG_ON_START_SCREEN_RECORD,
    ID_MSG_ON_STOP_SCREEN_RECORD,
    ID_MSG_ON_GOTO_DESKTOP,
    ID_MSG_ON_RECENT,
    ID_MSG_ON_SHOW_NOTIFICATION,
    ID_MSG_ON_LOCK_SCREEN,
    ID_MSG_ON_SEARCH,
    ID_MSG_ON_CLOSEPAGE,
    ID_MSG_ON_LAUNCH_VOICE_ASSISTANT,
    ID_MSG_ON_MUTE,
    ID_MSG_SYSTEMEVENTHANDLE_END,

    ID_MSG_TELEPHONEEVENTHANDLE_BEGIN = 5000,
    ID_MSG_ON_ANSWER,
    ID_MSG_ON_REFUSE,
    ID_MSG_ON_HANG_UP,
    ID_MSG_ON_TELEPHONE_CONTROL,
    ID_MSG_TELEPHONEEVENTHANDLE_END,

    ID_MSG_TOUCHEVENTHANDLE_BEGIN = 6000,
    ID_MSG_ON_TOUCH,
    ID_MSG_TOUCHEVENTHANDLE_END,

    ID_MSG_DEVICE_BEGIN = 7000,
    ID_MSG_ON_DEVICEADDED,
    ID_MSG_ON_DEVICE_REMOVED,
    ID_MSG_DEVICE_END,

    ID_MSG_ON_STANDARD = 9000,
    ID_MSG_SENIOR_INPUT_FUNC = 9050,
    ID_MSG_HDI_INJECT = 9051,
    ID_MSG_ON_JOYSTICK = 10000,
    ID_MSG_ON_WINDOWS = 11000,

    ID_MSG_ON_VIRTUALKEY = 12000,
    ID_MSG_ON_VIRTUALHOME,
    ID_MSG_ON_VIRTUALBACK,
    ID_MSG_ON_VIRTUALMULTIXERA,
    ID_MSG_GETMMIINFO = 12100,
    ID_MSG_GETMMIINFO_ACK,

    ID_MSG_ON_DUMP = 13000,
    ID_MSG_ON_EXCEPTION = 13050,
    ID_MSG_ON_LIST,
    ID_MSG_INJECTKEYEVENT = 14000,

    // STClient message id
    ID_MSG_AUTOTEST_FRAME = 30000,
    ID_MSG_AUTOTEST_FRAME_ACK,
    ID_MSG_AUTOTEST_FRAME_LIBPKT,
    ID_MSG_AUTOTEST_FRAME_MAPPKT,
    ID_MSG_AUTOTEST_FRAME_STDPKT,
    ID_MSG_AUTOTEST_FRAME_MAGPKT,
    ID_MSG_AUTOTEST_FRAME_DPCPKT,
    ID_MSG_AUTOTEST_FRAME_CLTPKT,
    ID_MSG_AUTOTEST_FRAME_CLISTPKT,
    ID_MSG_AUTOTEST_FRAME_REPLYPKT,
    ID_MSG_AUTOTEST_FRAME_KEYTYPEPKT,

    ID_MSG_END,
};

enum INPUT_DEVICE_TYPE {
    INPUT_DEVICE_CAP_KEYBOARD = 0,
    INPUT_DEVICE_CAP_POINTER = 1,
    INPUT_DEVICE_CAP_TOUCH = 2,
    INPUT_DEVICE_CAP_TABLET_TOOL = 3,
    INPUT_DEVICE_CAP_TABLET_PAD = 4,
    INPUT_DEVICE_CAP_GESTURE = 5,
    INPUT_DEVICE_CAP_SWITCH = 6,
    INPUT_DEVICE_CAP_JOYSTICK = 7,
    INPUT_DEVICE_CAP_AISENSOR = 8,
    INPUT_DEVICE_CAP_TOUCH_PAD = 9,
    INPUT_DEVICE_CAP_REMOTE_CONTROL = 10,
    INPUT_DEVICE_CAP_TRACK_BALL = 11,
    INPUT_DEVICE_CAP_KNUCKLE = 12,
    INPUT_DEVICE_CAP_TRACKPAD5 = 13,
    INPUT_DEVICE_CAP_GAMEPAD = 14,
};

enum INPUT_DEVICE_INDEX {
    INPUT_DEVICE_POINTER_INDEX = 32,
    INPUT_DEVICE_KEYBOARD_INDEX = 33,
    INPUT_DEVICE_TOUCH_INDEX = 34,
    INPUT_DEVICE_TABLET_TOOL_INDEX = 35,
    INPUT_DEVICE_TABLET_PAD_INDEX = 36,
    INPUT_DEVICE_GESTURE_INDEX = 37,
    INPUT_DEVICE_FINGER_INDEX = 38,
    INPUT_DEVICE_JOYSTICK_INDEX = 39,
    INPUT_DEVICE_AISENSOR_INDEX = 40,
    INPUT_DEVICE_TOUCH_PAD = 41,
    INPUT_DEVICE_REMOTE_CONTROL = 42,
    INPUT_DEVICE_SWITCH_INDEX = 43,
    INPUT_DEVICE_TRACKPAD5_INDEX = 44,
    INPUT_DEVICE_GAMEPAD_INDEX = 45,
};

enum MSG_TYPE {
    MSG_TYPE_DEVICE_INIT,
    MSG_TYPE_DEVICE_INFO,
};
enum JOYSTICK_AXIS_SOURCE {
    JOYSTICK_AXIS_SOURCE_UNKNOW = 0,
    JOYSTICK_AXIS_SOURCE_ABS_X = bit(0),
    JOYSTICK_AXIS_SOURCE_ABS_Y = bit(1),
    JOYSTICK_AXIS_SOURCE_ABS_Z = bit(2),
    JOYSTICK_AXIS_SOURCE_ABS_RX = bit(3),
    JOYSTICK_AXIS_SOURCE_ABS_RY = bit(4),
    JOYSTICK_AXIS_SOURCE_ABS_RZ = bit(5),
    JOYSTICK_AXIS_SOURCE_ABS_THROTTLE = bit(6),
    JOYSTICK_AXIS_SOURCE_ABS_HAT0X = bit(11),
    JOYSTICK_AXIS_SOURCE_ABS_HAT0Y = bit(12),
};

enum TestMutInputAnrErr {
    MULTIMODE_INPUT_ANR_NORMAL = 200,
    MULTIMODE_INPUT_ANR_NOWINDOW,
    MULTIMODE_INPUT_ANR_NOFD,
    MULTIMODE_INPUT_ANR_CONNECTDEAD,
    MULTIMODE_INPUT_ANR_BUFFERFULL,
    MULTIMODE_INPUT_ANR_QUEUEBLOCK,
    MULTIMODE_INPUT_TOUCH_NORMAL = 300,
    MULTIMODE_INPUT_TOUCH_THREEFINGERS = 303,
};

#endif
