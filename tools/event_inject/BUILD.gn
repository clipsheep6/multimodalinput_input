import("//build/ohos.gni")
import("//build/test.gni")
import("//foundation/multimodalinput/input/multimodalinput_mini.gni")
module_output_path = "multimodalinput/unit_out"
HDF_FWKS = "//drivers/framework"

config("event_injection_config") {
  visibility = [ ":*" ]

  include_dirs = [
    "./include",
    "//foundation/multimodalinput/input/common/include",
    "//foundation/communication/ipc/interfaces/innerkits/ipc_core/include",
  ]

  cflags = [
    "-DOHOS_BUILD",
    "-Wno-unused-parameter",
    "-Wno-implicit-int",
    "-Wno-return-type",
    "-Wno-unused-function",
    "-Wno-string-conversion",
    "-Wheader-hygiene",
    "-Wunused-private-field",
    "-Wsign-compare",
    "-Wformat",
    "-Wdeprecated-declarations",
  ]

  if (is_mmi_have_debug) {
    cflags += [
      "-DOHOS_BUILD_MMI_DEBUG",
    ]
  }
  
    if (is_mmi_have_libinput) {
        cflags += [
            "-DOHOS_BUILD_LIBINPUT",
        ]
    }

    if (is_mmi_have_hdf) {
        cflags += [
            "-DOHOS_BUILD_HDF",
        ]
    }

    if (is_mmi_have_ai) {
        cflags += [
            "-DOHOS_BUILD_AI",
        ]
    }
}

config("event_injection_public_config") {
    include_dirs = [
      "include",
      "//third_party/FreeBSD/sys/dev/evdev",
      "//third_party/json/include",
      "//third_party/json/include/nlohmann",
    ]
}

ohos_shared_library("event-injection") {
   sources = [
    "./src/injection_event_dispatch.cpp",
    "./src/injection_touch_event.cpp",
    "./src/parse_file.cpp",
    "./src/send_message.cpp",
    "./src/message_send_recv_stat.cpp",
    "./src/test_aux_tool_client.cpp",
    "./src/test_aux_tool_msg_handler.cpp",
    "./src/get_device_node.cpp",
    "./src/device_base.cpp",
    "./src/get_device_object.cpp",
    "./src/manage_inject_device.cpp",
    "./src/processing_finger_device.cpp",
    "./src/processing_pen_device.cpp",
    "./src/processing_pad_device.cpp",
    "./src/processing_touch_screen_device.cpp",
    "./src/injection_tools_help_func.cpp",
    "./src/processing_game_pad_device.cpp",
    "./src/processing_joystick_device.cpp",
    "./src/processing_mouse_device.cpp",
    "./src/processing_keyboard_device.cpp",
  ]
  
  configs = [
    ":event_injection_config",
  ]
  
  public_configs = [
    ":event_injection_public_config",
  ]

  deps = [
    "//foundation/multimodalinput/input/frameworks/util:libmmi-util",
    "//foundation/multimodalinput/input/service/connect_manager:mmi_connect_manager_proxy",
    "//foundation/communication/ipc/interfaces/innerkits/ipc_core:ipc_core"
  ]
  
  if (is_mmi_have_libinput || is_mmi_have_hdf) {
    deps += [
      "//foundation/multimodalinput/input/patch/diff_libinput_mmi:libinput-third-mmi",
    ]
  }

  part_name = "multimodalinput_base"
}

ohos_unittest("ut-event-injection-out") {
  module_out_path = module_output_path
  include_dirs = [
   "//drivers/peripheral/input/interfaces/include",
    "//drivers/adapter/uhdf2/adapter/osal/include",
    "//utils/native/base/include",
    "//third_party/googletest/googletest/include",
    "//third_party/wayland-ivi-extension/include",
    "${mmi_path}/frameworks/util/common",
    "${mmi_path}/frameworks/util/common/include",
    "${mmi_path}/frameworks/util/network",
    "${mmi_path}/frameworks/util/network/include",
    "${mmi_path}/frameworks/util/socket",
    "${mmi_path}/frameworks/util/socket/include",
    "${mmi_path}/frameworks/proxy/event_handle",
    "${mmi_path}/frameworks/proxy/event_handle/include",
    "${mmi_path}/frameworks/proxy/module_loader",
    "${mmi_path}/frameworks/proxy/module_loader/include",
    "${mmi_path}/common/include",
    "${mmi_path}/interfaces/native/innerkits/common/include",
    "${mmi_path}/interfaces/native/innerkits/proxy/include",
    "${mmi_path}/interfaces/native/innerkits/event/include",
    "${mmi_path}/service/include",
    "${mmi_path}/service/ai_sensor_adapter/include",
    "${mmi_path}/service/application_manager/include",
    "${mmi_path}/service/device_scalability/include",
    "${mmi_path}/service/event_dispatch/include",
    "${mmi_path}/service/event_handle/include",
    "${mmi_path}/service/event_standard/include",
    "${mmi_path}/service/hdi_inject/include",
    "${mmi_path}/service/hdf_adapter/include",
    "${mmi_path}/service/libinput_adapter/include",
    "${mmi_path}/service/message_handle/include",
    "${mmi_path}/service/module_loader/include",
    "${mmi_path}/service/window_manager/include",
    "${mmi_path}/tools/event_inject/include",
    "${mmi_path}/uinput",
    "$HDF_FWKS/include/utils",
    "$HDF_FWKS/include/osal",
    "$HDF_FWKS/core/adapter/syscall/include",
    "$HDF_FWKS/include/core",
    "$HDF_FWKS/ability/sbuf/include",
    "$HDF_FWKS/core/shared/include",
    "$HDF_FWKS/utils/include",
    "$HDF_FWKS/inclue",
  ]

  if (is_mmi_have_libinput || is_mmi_have_hdf) {
    include_dirs += [
      "$root_out_dir/diff_libinput_mmi/src",
    ]
  }

  sources = [
    "./test/aux_tool_msg_handler_test.cpp",
    "./test/injection_dump_event_test.cpp",
    "./test/injection_event_dispatch_test.cpp",
    "./test/injection_exception_event_test.cpp",
    "./test/injection_hdi_event_test.cpp",
    "./test/injection_list_event_test.cpp",
    "./test/injection_touch_event_test.cpp",
    "./test/libmmi_aisensor_client_test.cpp",
    "./test/parse_file_send_message_test.cpp",
  ]

  cflags = [
    "-DOHOS_BUILD",
    "-DOHOS_AUTO_TEST_FRAME",
  ]

  if (is_mmi_have_debug) {
    cflags += [
      "-DOHOS_BUILD_MMI_DEBUG",
    ]
  }

  if (is_mmi_have_libinput) {
    cflags += [
      "-DOHOS_BUILD_LIBINPUT",
    ]
  }

  if (is_mmi_have_hdf) {
    cflags += [
      "-DOHOS_BUILD_HDF",
    ]
  }

  if (is_mmi_have_ai) {
    cflags += [
      "-DOHOS_BUILD_AI",
    ]
  }

  deps = [
    "//third_party/googletest:gmock_main",
    "//third_party/googletest:gtest_main",
    "${mmi_path}/frameworks/util:libmmi-util",
    "${mmi_path}/frameworks/proxy:libmmi-client",
    "${mmi_path}/service:libmmi-server",
    "${mmi_path}/tools/event_inject:event-injection",
    "//utils/native/base:utils",
    "//drivers/peripheral/input/hal:hdi_input",
    "//third_party/wayland-ivi-extension:ivi-controller",
    "//third_party/wayland-ivi-extension:libscreen-info-module",
    "//third_party/libxkbcommon:libxkbcommon",
  ]
  
  if (is_mmi_have_libinput || is_mmi_have_hdf) {
    deps += [
      "//foundation/multimodalinput/input/patch/diff_libinput_mmi:libinput-third-mmi",
    ]
  }
  external_deps = [
      "hiviewdfx_hilog_native:libhilog"
  ]
}

group("ut-event-injection")
{
  testonly = true
  deps = []
  deps += [
    ":ut-event-injection-out"
  ]
}
