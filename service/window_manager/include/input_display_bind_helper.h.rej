diff a/service/window_manager/include/input_display_bind_helper.h b/service/window_manager/include/input_display_bind_helper.h	(rejected hunks)
@@ -4,7 +4,7 @@
  * you may not use this file except in compliance with the License.
  * You may obtain a copy of the License at
  *
- *     http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
  * distributed under the License is distributed on an "AS IS" BASIS,
@@ -26,27 +26,27 @@
 namespace OHOS {
 namespace MMI {
 class BindInfos;
-class InputDisplayBindHelper
-{
+class InputDisplayBindHelper {
 public:
-	InputDisplayBindHelper(const std::string bindCfgFile);
-	std::string GetBindDisplayNameByInputDevice(int32_t inputDeviceId) const;
-	void AddInputDevice(int32_t id, const std::string &name);
-	void RemoveInputDevice(int32_t id);
-	bool IsDisplayAdd(int32_t id, const std::string &name);
-	std::set<std::pair<int32_t, std::string>> GetDisplayIdNames() const;
-	void AddDisplay(int32_t id, const std::string &name);
-	void RemoveDisplay(int32_t id);
-	void Load();
-	std::string Dumps() const;
-	void Store();
-	int32_t GetDisplayBindInfo(DisplayBindInfos &infos);
-	int32_t SetDisplayBind(int32_t deviceId, int32_t displayId, std::string &msg);
+    InputDisplayBindHelper(const std::string bindCfgFile);
+    std::string GetBindDisplayNameByInputDevice(int32_t inputDeviceId) const;
+    void AddInputDevice(int32_t id, const std::string &name);
+    void RemoveInputDevice(int32_t id);
+    bool IsDisplayAdd(int32_t id, const std::string &name);
+    std::set<std::pair<int32_t, std::string>> GetDisplayIdNames() const;
+    void AddDisplay(int32_t id, const std::string &name);
+    void RemoveDisplay(int32_t id);
+    void Load();
+    std::string Dumps() const;
+    void Store();
+    int32_t GetDisplayBindInfo(DisplayBindInfos &infos);
+    int32_t SetDisplayBind(int32_t deviceId, int32_t displayId, std::string &msg);
+
 private:
-	const std::string fileName_;
-	std::shared_ptr<BindInfos> infos_;
-	std::shared_ptr<BindInfos> configFileInfos_;
+    const std::string fileName_;
+    std::shared_ptr<BindInfos> infos_;
+    std::shared_ptr<BindInfos> configFileInfos_;
 };
-} //namespace MMI
+} // namespace MMI
 } // namespace OHOS
 #endif // INPUT_DISPLAY_BIND_HELPER_H
\ No newline at end of file
