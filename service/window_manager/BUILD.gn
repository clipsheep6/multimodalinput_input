# Copyright (c) 2025 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/test.gni")
import("../../multimodalinput_mini.gni")

module_output_path = "input/input"

ohos_shared_library("mmi_touch_drawing_handler") {
  branch_protector_ret = "pac_ret"
  sanitize = {
    cfi = true
    cfi_cross_dso = true
    debug = false
  }

  defines = input_default_defines

  if (defined(use_rosen_drawing) && use_rosen_drawing) {
    defines += [ "USE_ROSEN_DRAWING" ]
  }

  include_dirs = [
    "${mmi_path}/intention/prototype/include",
    "${mmi_path}/service/window_manager/include",
  ]

  sources = [ "src/touch_drawing_handler.cpp" ]

  configs = [ "${mmi_path}:coverage_flags" ]

  deps = [
    "${mmi_path}/frameworks/proxy:libmmi-common",
    "${mmi_path}/util:libmmi-util",
  ]

  external_deps = [
    "c_utils:utils",
    "graphic_2d:2d_graphics",
    "graphic_2d:librender_service_base",
    "graphic_2d:librender_service_client",
    "hilog:libhilog",
    "init:libbegetutil",
  ]

  if (hitrace_enabled) {
    external_deps += [ "hitrace:hitrace_meter" ]
  }

  part_name = "${mmi_part_name}"
  subsystem_name = "${mmi_subsystem_name}"
}

ohos_unittest("TouchDrawingHandlerTest") {
  module_out_path = module_output_path

  configs = [ "${mmi_path}:coverage_flags" ]

  cflags = [
    "-Dprivate=public",
    "-Dprotected=public",
  ]

  branch_protector_ret = "pac_ret"
  sanitize = {
    cfi = true
    cfi_cross_dso = true
    debug = false
  }

  defines = input_default_defines

  if (defined(use_rosen_drawing) && use_rosen_drawing) {
    defines += [ "USE_ROSEN_DRAWING" ]
  }

  include_dirs = [
    "${mmi_path}/intention/prototype/include",
    "${mmi_path}/service/window_manager/include",
  ]

  sources = [
    "src/touch_drawing_handler.cpp",
    "test/touch_drawing_handler_test.cpp",
  ]

  deps = [
    "${mmi_path}/frameworks/proxy:libmmi-common",
    "${mmi_path}/util:libmmi-util",
  ]

  external_deps = [
    "c_utils:utils",
    "googletest:gmock_main",
    "googletest:gtest_main",
    "graphic_2d:2d_graphics",
    "graphic_2d:librender_service_base",
    "graphic_2d:librender_service_client",
    "hilog:libhilog",
    "init:libbegetutil",
  ]

  if (hitrace_enabled) {
    external_deps += [ "hitrace:hitrace_meter" ]
  }
}
