# Copyright (c) 2025 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/test.gni")
import("../../../multimodalinput_mini.gni")

module_output_path = "input/input"

ohos_unittest("PreferencesManagerTestWithMock") {
  module_out_path = module_output_path

  configs = [ "${mmi_path}:coverage_flags" ]

  cflags = [
    "-Dprivate=public",
    "-Dprotected=public",
  ]

  include_dirs = [
    "${mmi_path}/service/connect_manager/include",
    "${mmi_path}/service/delegate_task/include",
    "${mmi_path}/service/device_config/include",
    "${mmi_path}/service/device_manager/include",
    "${mmi_path}/service/device_state_manager/include",
    "${mmi_path}/service/dfx/include",
    "${mmi_path}/service/display_state_manager/include",
    "${mmi_path}/service/event_dispatch/include",
    "${mmi_path}/service/event_handler/include",
    "${mmi_path}/service/fingersense_wrapper/include",
    "${mmi_path}/service/gesturesense_wrapper/include",
    "${mmi_path}/service/interceptor/include",
    "${mmi_path}/service/key_command/include",
    "${mmi_path}/service/key_event_normalize/include",
    "${mmi_path}/service/module_loader/include",
    "${mmi_path}/service/product_property_config/include",
    "${mmi_path}/service/custom_config_parser/include",
    "${mmi_path}/util/json_parser/include",
  ]

  sources = [
    "${mmi_path}/service/module_loader/src/multimodal_input_preferences_manager.cpp",
    "src/multimodal_input_preferences_manager_test_with_mock.cpp",
  ]

  deps = [
    "${mmi_path}/util:libmmi-util",
    "${mmi_path}/service/custom_config_parser:mmi_custom_config_parser",
  ]

  external_deps = [
    "cJSON:cjson",
    "googletest:gmock_main",
    "googletest:gtest_main",
    "hilog:libhilog",
    "init:libbegetutil",
    "libxml2:libxml2",
    "preferences:native_preferences",
    "c_utils:utils",
    "hilog:libhilog",
  ]
}

group("ModuleLoaderTests") {
  testonly = true
  deps = [ ":PreferencesManagerTestWithMock" ]
}
