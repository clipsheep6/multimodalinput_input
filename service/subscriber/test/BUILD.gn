# Copyright (c) 2024 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/test.gni")
import("../../../multimodalinput_mini.gni")

module_output_path = "input/input"

ohos_unittest("key_shortcut_rules_test") {
  module_out_path = module_output_path
  defines = input_default_defines

  sources = [ "src/key_shortcut_rules_test.cpp" ]

  cflags = [
    "-Dprivate=public",
    "-Dprotected=public",
  ]

  deps = [
    "${mmi_path}/frameworks/proxy:libmmi-client",
    "${mmi_path}/util:libmmi-util",
  ]

  external_deps = [
    "c_utils:utilsbase",
    "eventhandler:libeventhandler",
    "googletest:gmock_main",
    "googletest:gtest_main",
    "hilog:libhilog",
    "hilog:libhilog_base",
    "ipc:ipc_core",
  ]
}

ohos_unittest("InputActiveSubscriberHandlerTest") {
  module_out_path = module_output_path

  include_dirs = [
    "${mmi_path}/service/connect_manager/include",
    "${mmi_path}/service/event_handler/include",
    "${mmi_path}/service/module_loader/include",
    "${mmi_path}/service/subscriber/include",
  ]

  configs = [ "${mmi_path}:coverage_flags" ]

  cflags = [
    "-Dprivate=public",
    "-Dprotected=public",
  ]

  sources = [ "input_active_subscriber_handler_test.cpp" ]

  deps = [
    "${mmi_path}/service:libmmi-server",
    "${mmi_path}/util:libmmi-util",
  ]

  external_deps = [
    "c_utils:utils",
    "hilog:libhilog",
    "googletest:gmock_main",
    "googletest:gtest_main",
    "hisysevent:libhisysevent",
    "ipc:ipc_core",
    "libinput:libinput-third-mmi",
  ]
}

group("mmi_subscriber_tests") {
  testonly = true

  deps = [ ":InputActiveSubscriberHandlerTest" ]
  if (input_shortcut_key_rules_enabled) {
    deps += [ ":key_shortcut_rules_test" ]
  }
}
