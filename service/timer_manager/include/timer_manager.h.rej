diff a/service/timer_manager/include/timer_manager.h b/service/timer_manager/include/timer_manager.h	(rejected hunks)
@@ -4,7 +4,7 @@
  * you may not use this file except in compliance with the License.
  * You may obtain a copy of the License at
  *
- *     http://www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
  * distributed under the License is distributed on an "AS IS" BASIS,
@@ -42,20 +42,21 @@ public:
 
 private:
     struct TimerItem {
-        int32_t id { 0 };
-        int32_t intervalMs  { 0 };
-        int32_t repeatCount  { 0 };
-        int32_t callbackCount  { 0 };
-        int64_t nextCallTime  { 0 };
+        int32_t id{ 0 };
+        int32_t intervalMs{ 0 };
+        int32_t repeatCount{ 0 };
+        int32_t callbackCount{ 0 };
+        int64_t nextCallTime{ 0 };
         std::function<void()> callback;
     };
+
 private:
     int32_t TakeNextTimerId();
     int32_t AddTimerInternal(int32_t intervalMs, int32_t repeatCount, std::function<void()> callback);
     int32_t RemoveTimerInternal(int32_t timerId);
     int32_t ResetTimerInternal(int32_t timerId);
     bool IsExistInternal(int32_t timerId);
-    void InsertTimerInternal(std::unique_ptr<TimerItem>& timer);
+    void InsertTimerInternal(std::unique_ptr<TimerItem> &timer);
     int32_t CalcNextDelayInternal();
     void ProcessTimersInternal();
 
