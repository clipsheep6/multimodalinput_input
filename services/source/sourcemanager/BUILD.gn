# Copyright (c) 2021-2022 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/ohos.gni")
import(
    "//foundation/distributedhardware/distributed_input/distributedinput.gni")

ohos_shared_library("libdinput_source") {
  include_dirs = [
    "include",
    "${frameworks_path}/include",
    "${innerkits_path}/include",
    "${innerkits_path}/include/ipc",
    "${innerkits_path}/src",
    "${ipc_path}/include",
    "${ipc_path}/src",
    "//commonlibrary/c_utils/base/include",
    "//utils/system/safwk/native/include",
    "${common_path}/include",
    "${fwk_common_path}/log/include",
    "${fwk_common_path}/utils/include",
    "${fwk_utils_path}/include/log",
    "${fwk_utils_path}/include",
    "${service_common}/include",
    "${services_source_path}/inputinject/include",
    "${services_source_path}/transport/include",
    "${dfx_utils_path}/include",
    "${utils_path}/include",
    "//third_party/json/include",
    "//base/hiviewdfx/hitrace/interfaces/native/innerkits/include/hitrace_meter",
    "${low_latency_path}/include",
    "${fwk_interfaces_path}/include",
    "${fwk_interfaces_path}/include/ipc",
    "${distributedinput_path}/inputdevicehandler/include",
    "//base/hiviewdfx/hisysevent/interfaces/native/innerkits/hisysevent/include",
    "//foundation/communication/dsoftbus/interfaces/kits/bus_center",
    "//foundation/communication/dsoftbus/interfaces/kits/common",
  ]

  sources = [
    "${common_path}/include/white_list_util.cpp",
    "${common_path}/include/input_check_param.cpp",
    "${ipc_path}/src/add_white_list_infos_call_back_proxy.cpp",
    "${ipc_path}/src/add_white_list_infos_call_back_stub.cpp",
    "${ipc_path}/src/del_white_list_infos_call_back_proxy.cpp",
    "${ipc_path}/src/del_white_list_infos_call_back_stub.cpp",
    "${ipc_path}/src/get_sink_screen_infos_call_back_proxy.cpp",
    "${ipc_path}/src/get_sink_screen_infos_call_back_stub.cpp",
    "${ipc_path}/src/distributed_input_sink_proxy.cpp",
    "${ipc_path}/src/distributed_input_sink_stub.cpp",
    "${ipc_path}/src/distributed_input_source_proxy.cpp",
    "${ipc_path}/src/distributed_input_source_stub.cpp",
    "${ipc_path}/src/prepare_d_input_call_back_proxy.cpp",
    "${ipc_path}/src/prepare_d_input_call_back_stub.cpp",
    "${ipc_path}/src/register_d_input_call_back_proxy.cpp",
    "${ipc_path}/src/register_d_input_call_back_stub.cpp",
    "${ipc_path}/src/start_d_input_call_back_proxy.cpp",
    "${ipc_path}/src/start_d_input_call_back_stub.cpp",
    "${ipc_path}/src/stop_d_input_call_back_proxy.cpp",
    "${ipc_path}/src/stop_d_input_call_back_stub.cpp",
    "${ipc_path}/src/start_stop_d_inputs_call_back_proxy.cpp",
    "${ipc_path}/src/start_stop_d_inputs_call_back_stub.cpp",
    "${ipc_path}/src/start_stop_result_call_back_proxy.cpp",
    "${ipc_path}/src/start_stop_result_call_back_stub.cpp",
    "${ipc_path}/src/input_node_listener_proxy.cpp",
    "${ipc_path}/src/input_node_listener_stub.cpp",
    "${ipc_path}/src/sharing_dhid_listener_proxy.cpp",
    "${ipc_path}/src/sharing_dhid_listener_stub.cpp",
    "${ipc_path}/src/simulation_event_listener_proxy.cpp",
    "${ipc_path}/src/simulation_event_listener_stub.cpp",
    "${ipc_path}/src/unprepare_d_input_call_back_proxy.cpp",
    "${ipc_path}/src/unprepare_d_input_call_back_stub.cpp",
    "${ipc_path}/src/unregister_d_input_call_back_proxy.cpp",
    "${ipc_path}/src/unregister_d_input_call_back_stub.cpp",
    "src/distributed_input_source_event_handler.cpp",
    "src/distributed_input_source_manager.cpp",
    "src/distributed_input_source_sa_cli_mgr.cpp",
  ]

  defines = [
    "HI_LOG_ENABLE",
    "DH_LOG_TAG=\"distributedinputmanagerkit\"",
    "LOG_DOMAIN=0xD004100",
  ]

  if (distributed_input_low_latency) {
    defines += [ "DINPUT_LOW_LATENCY" ]
  }

  deps = [
    "${dfx_utils_path}:libdinput_dfx_utils",
    "${fwk_utils_path}:distributedhardwareutils",
    "${low_latency_path}:libdinput_low_latency",
    "${utils_path}:libdinput_utils",
    "//base/notification/eventhandler/frameworks/eventhandler:libeventhandler",
    "//foundation/distributedhardware/distributed_input/interfaces/inner_kits:libdinput_sdk",
    "//foundation/distributedhardware/distributed_input/services/source/inputinject:libdinput_inject",
    "//foundation/distributedhardware/distributed_input/services/source/transport:libdinput_source_trans",
    "${fwk_interfaces_path}:libdhfwk_sdk",
  ]

  external_deps = [
    "c_utils:utils",
    "eventhandler:libeventhandler",
    "hitrace_native:hitrace_meter",
    "ipc:ipc_core",
    "safwk:system_ability_fwk",
    "samgr:samgr_proxy",
  ]

  cflags_cc = [ "-DHILOG_ENABLE" ]

  subsystem_name = "distributedhardware"

  part_name = "distributed_input"
}
