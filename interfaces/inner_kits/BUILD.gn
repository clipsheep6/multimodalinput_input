# Copyright (c) 2021-2022 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/ohos.gni")
import(
    "//foundation/distributedhardware/distributed_input/distributedinput.gni")

config("input_sdk_public_config") {
  include_dirs = [
    "${common_path}/include",
    "${frameworks_path}/include",
    "${fwk_common_path}/log/include",
    "${fwk_common_path}/utils/include",
    "${fwk_interfaces_path}/include",
    "${fwk_interfaces_path}/include/ipc",
    "${fwk_utils_path}/include",
    "${fwk_utils_path}/include/log",
    "${innerkits_path}/include",
    "${innerkits_path}/src",
    "${ipc_path}/include",
    "${ipc_path}/src",
    "${utils_path}/include",
    "//commonlibrary/c_utils/base/include",
    "//third_party/json/include",
    "//utils/system/safwk/native/include",
    "//foundation/systemabilitymgr/safwk/interfaces/innerkits/safwk",
    "//foundation/communication/dsoftbus/interfaces/kits/bus_center",
    "//foundation/communication/dsoftbus/interfaces/kits/common",
  ]
}
ohos_shared_library("libdinput_sdk") {
  public_configs = [":input_sdk_public_config"]

  sources = [
    "${common_path}/include/white_list_util.cpp",
    "${innerkits_path}/src/distributed_input_kit.cpp",
    "${ipc_path}/src/add_white_list_infos_call_back_proxy.cpp",
    "${ipc_path}/src/add_white_list_infos_call_back_stub.cpp",
    "${ipc_path}/src/del_white_list_infos_call_back_proxy.cpp",
    "${ipc_path}/src/del_white_list_infos_call_back_stub.cpp",
    "${ipc_path}/src/get_sink_screen_infos_call_back_proxy.cpp",
    "${ipc_path}/src/get_sink_screen_infos_call_back_stub.cpp",
    "${ipc_path}/src/dinput_sa_manager.cpp",
    "${ipc_path}/src/distributed_input_client.cpp",
    "${ipc_path}/src/distributed_input_sink_proxy.cpp",
    "${ipc_path}/src/distributed_input_sink_stub.cpp",
    "${ipc_path}/src/distributed_input_source_proxy.cpp",
    "${ipc_path}/src/distributed_input_source_stub.cpp",
    "${ipc_path}/src/input_node_listener_proxy.cpp",
    "${ipc_path}/src/input_node_listener_stub.cpp",
    "${ipc_path}/src/prepare_d_input_call_back_proxy.cpp",
    "${ipc_path}/src/prepare_d_input_call_back_stub.cpp",
    "${ipc_path}/src/register_d_input_call_back_proxy.cpp",
    "${ipc_path}/src/register_d_input_call_back_stub.cpp",
    "${ipc_path}/src/sharing_dhid_listener_proxy.cpp",
    "${ipc_path}/src/sharing_dhid_listener_stub.cpp",
    "${ipc_path}/src/simulation_event_listener_proxy.cpp",
    "${ipc_path}/src/simulation_event_listener_stub.cpp",
    "${ipc_path}/src/start_d_input_call_back_proxy.cpp",
    "${ipc_path}/src/start_d_input_call_back_stub.cpp",
    "${ipc_path}/src/start_stop_d_inputs_call_back_proxy.cpp",
    "${ipc_path}/src/start_stop_d_inputs_call_back_stub.cpp",
    "${ipc_path}/src/start_stop_result_call_back_proxy.cpp",
    "${ipc_path}/src/start_stop_result_call_back_stub.cpp",
    "${ipc_path}/src/stop_d_input_call_back_proxy.cpp",
    "${ipc_path}/src/stop_d_input_call_back_stub.cpp",
    "${ipc_path}/src/unprepare_d_input_call_back_proxy.cpp",
    "${ipc_path}/src/unprepare_d_input_call_back_stub.cpp",
    "${ipc_path}/src/unregister_d_input_call_back_proxy.cpp",
    "${ipc_path}/src/unregister_d_input_call_back_stub.cpp",
  ]

  deps = [
    "//base/notification/eventhandler/frameworks/eventhandler:libeventhandler",
    "${fwk_utils_path}:distributedhardwareutils",
    "${utils_path}:libdinput_utils",
  ]

  defines = [
    "HI_LOG_ENABLE",
    "DH_LOG_TAG=\"distributedinputclient\"",
    "LOG_DOMAIN=0xD004100",
  ]

  external_deps = [
    "c_utils:utils",
    "ipc:ipc_core",
    "samgr:samgr_proxy",
  ]

  cflags_cc = [ "-DHILOG_ENABLE" ]

  subsystem_name = "distributedhardware"

  part_name = "distributed_input"
}
